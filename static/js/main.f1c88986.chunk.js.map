{"version":3,"sources":["assets/images/profile_4.png","logo.svg","assets/images/profile_2.png","Slider.js","Header.js","Datacard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slider","props","nextSlide","setState","sliding","setTimeout","prevState","oldSlides","slides","newHiddenSlide","shift","order","length","push","highlight","Math","ceil","slideCount","map","s","index","slide","lastSlide","pop","unshift","state","setInterval","this","dimensions","width","container","offsetWidth","height","offsetHeight","sliderStyles","slideItem","transform","transition","className","ref","el","style","id","key","content","React","Component","Header","Datacard","data","heading","item","img","src","title","subtitle","date","desc","descItem","link","href","text","App","Profile1","Object","keys","Data","section","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1c88986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_4.77e972a1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile_2.7a9b68c3.png\";","import React from \"react\";\n\nexport default class Slider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let highlight = Math.ceil(props.slideCount/2);\n        let slides = props.slides.map((slide, index) => {\n            slide.order = index;\n            if(index === highlight - 1)\n                slide.highlight = true;\n            return slide;\n        })\n        let lastSlide = slides.pop();\n        slides.unshift({\n            ...lastSlide,\n            order: -1\n        });\n        this.state = {\n            slides: slides,\n            sliding: false\n        };\n\n        setInterval(() => {\n            this.nextSlide();\n        }, 5000)\n    }\n\n    componentDidMount() {\n        this.setState({\n            dimensions: {\n              width: this.container.offsetWidth,\n              height: this.container.offsetHeight,\n            },\n          });\n    }\n\n    nextSlide = () => {\n        this.setState({sliding: true}, () => {\n            setTimeout(() => {\n                this.setState((prevState) => {\n                    let oldSlides = [...prevState.slides];\n                    let hiddenSlide = oldSlides.shift();\n                    let newHiddenSlide = { \n                      ...hiddenSlide, \n                      order: oldSlides[oldSlides.length - 1].order + 1 \n                    };\n                    oldSlides.push(newHiddenSlide);\n                    let highlight = Math.ceil(this.props.slideCount/2);\n                    const slides = oldSlides.map((s, index) => {\n                      return { ...s, order: s.order - 1, highlight: index === highlight ? true : false };\n                    });\n                    return { slides, sliding: false };\n                  });\n            }, 500);\n        })\n    }\n\n    render() {\n        const { slides, sliding, dimensions } = this.state;\n        const { slideCount } = this.props;\n\n        let sliderStyles = {};\n        let slideItem = {};\n\n        if(dimensions) {\n            sliderStyles = {\n                transform: sliding ? `translateX(${-2 * (dimensions.width/slideCount)}px)` :  `translateX(-${dimensions.width/slideCount}px)`,\n                transition:  sliding ? \"transform 500ms ease-in\" : \"\"\n            }\n            slideItem = {\n                width: `${dimensions.width/slideCount}px`\n            }\n        }\n        return (\n            <div className=\"box\" ref={el => (this.container = el)}>\n            {\n                dimensions ? \n                <div className=\"slider\" style={sliderStyles}>\n                {\n                    slides.map((slide, id) => (\n                        <div id={id} key={slide.order} className=\"slideItem\" style={slideItem}>\n                            <div key={slide.order} className=\"wrapper\">\n                                {\n                                {...slide.content, \n                                    props: {\n                                        ...slide.content.props,\n                                        className: slide.highlight && !sliding ? slide.content.props.className + \" highlight\" : slide.content.props.className\n                                    }\n                                }\n                                }\n                            </div>\n                        </div>\n                    ))\n                }\n            </div> : null\n            }\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <div>Nithin M Thomas</div>\n            <div>nithinm.10@gmail.com</div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\n\nconst Datacard = (props) => {\n\tconst { heading, content } = props.data;\n\treturn (\n\t\t<div className=\"dataCard\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t{heading}\n\t\t\t</div>\n\t\t\t{content.map(item => (\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t{ item.img && <div className=\"img\">\n\t\t\t\t\t\t<img src={item.img} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.title && <div className=\"title\">\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.subtitle && <div className=\"subtitle\">\n\t\t\t\t\t\t\t\t{item.subtitle}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.date && <div className=\"date\">\n\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.desc && <div className=\"desc\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\titem.desc.map(descItem => (\n\t\t\t\t\t\t\t\t\t\t<div className=\"descItem\">\n\t\t\t\t\t\t\t\t\t\t\t{descItem}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.link && <div className=\"link\">\n\t\t\t\t\t\t\t\t<a href={item.link.link}>{item.link.text}</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Datacard;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport Profile1 from '../src/assets/images/profile_4.png';\nimport Profile2 from '../src/assets/images/profile_2.png';\nimport Slider from './Slider';\nimport Header from './Header';\nimport Datacard from './Datacard';\nimport Data from \"./data.json\";\nimport './App.css';\n\nfunction App() {\n  let position = \"0px\";\n\n  // setInterval(() => {\n  //   if(position === \"0px\") {\n  //     position = \"-450px\";\n  //   } else {\n  //     position = \"0px\";\n  //   }\n  //   document.getElementById(\"test\").style[\"transform\"] = \"translateY(\" + position + \")\"\n  //   document.getElementById(\"test\").style[\"transition-duration\"] = \"750ms\"\n  // }, 5000)\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"first\">\n          <div id=\"test\" className=\"profileImgs\">\n            <div className=\"imgContainer\"><img src={Profile1}></img></div>\n          </div>\n          {/* <span className=\"label\">Developer</span> */}\n          <Slider slideCount={3} slides={[\n            {\n              content: <div className=\"tile\">\n                Full Stack Devloper\n              </div>\n            },\n            {\n              content: <div className=\"tile\">\n                React/Redux\n              </div>\n            },\n            {\n              content: <div className=\"tile\">\n                UI@WalmartLabs\n              </div>\n            },\n            {\n              content: <div className=\"tile sdfsdf\">\n                Ui Specialist\n              </div>\n            },\n            {\n              content: <div className=\"tile\">\n                Server side(Node.js)\n              </div>\n            }\n          ]} />\n      </div>\n      {\n        Object.keys(Data).map(section => (\n          <Datacard data={Data[section]} />\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}